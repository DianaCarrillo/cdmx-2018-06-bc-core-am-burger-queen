{"version":3,"sources":["components/Comprueba.js","components/Meals/Meals.js","components/DesayunoComida/BreakfastFood.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["Component","meals","react_default","a","createElement","meal","map","i","key","reactstrap_es","className","size","Object","keys","values","breakfastfood","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","desayunobtn","newArray","console","log","desayuno","Menu","precio","newObject","defineProperty","push","setState","almuerzobtn","comida","almuerzo","state","placeholder","class","color","onClick","Meals","logout","Login","toggle","modal","center","for","hidden","type","name","id","onChange","handleChange","login","href","isOpen","modalTransition","timeout","backdropTransition","restaurarPassword","App","e","target","value","preventDefault","firebase","auth","signInWithEmailAndPassword","email","password","then","u","concat","catch","error","alert","handleLogout","signOut","result","user","code","message","sendPasswordResetEmail","renderLoginButton","BreakfastFood","components_Login_Login","_this2","onAuthStateChanged","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f0568ad.chunk.js","sourcesContent":["import {Button} from 'reactstrap';\r\nimport React, { Component } from 'react';\r\n\r\nclass breakfast extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n    \r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <Button></Button>\r\n        </div>\r\n        )\r\n}\r\n}\r\nexport default breakfast","import React from 'react'\r\nimport {Button} from 'reactstrap'\r\n\r\nconst meals = (meals) =>{\r\n    return(\r\n        <div>{meals.meal.map((meal, i)=>{\r\n            return(\r\n                <div key={i}>\r\n                {/* <p>{Object.values(meal)}</p> */}\r\n                <Button className=\"meal-buttons\" size=\"lg\">{Object.keys(meal)}: ${Object.values(meal)}</Button>\r\n                </div>            \r\n            )\r\n\r\n        })}</div>\r\n    )\r\n    \r\n}\r\n\r\nexport default meals\r\n","import {Button, InputGroup, InputGroupAddon, Input} from 'reactstrap';\r\nimport React, { Component } from 'react';\r\nimport Comprueba from '../Comprueba'\r\nimport Menu from '../../data/menu.json'\r\nimport Meals from '../Meals/Meals'\r\n\r\nclass breakfastfood extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n         meal : []\r\n        }\r\n    }\r\n\r\n    desayunobtn= () => {\r\n        const newArray = []\r\n        console.log(newArray)\r\n        const desayuno = Menu.desayuno\r\n        for (let i in desayuno){\r\n            const precio = (desayuno[i]);\r\n            const newObject ={\r\n                [i]: precio\r\n            }\r\n            newArray.push(newObject)\r\n        }\r\n        this.setState({meal:newArray})\r\n    }\r\n\r\n    almuerzobtn = () => {\r\n        const newArray = []\r\n        // console.log(newArray)\r\n        const comida = Menu.almuerzo\r\n        for (let i in comida){\r\n            const precio = (comida[i]);\r\n            const newObject ={\r\n                [i]: precio\r\n            }\r\n            newArray.push(newObject)\r\n        }\r\n        this.setState({meal:newArray})\r\n    }\r\n\r\n\r\n    // tengo que hacer que el click de desayuno renderize los botones con la data correspondiente y también el almuerzo y cena\r\nrender(){\r\n    return(\r\n        <div>\r\n        <InputGroup>\r\n          <Input className=\"col-s-6 col-md-6\" placeholder=\"Nombre del cliente\" />\r\n          <InputGroupAddon><i class=\"fas fa-check check\"></i></InputGroupAddon>\r\n        </InputGroup>\r\n        <div >\r\n            <Button color=\"primary\" onClick={this.desayunobtn} className=\"almuerzo-desayuno-btn\" size=\"lg\">Desayuno</Button>\r\n            <Button color=\"secondary\" onClick={this.almuerzobtn} className=\"almuerzo-desayuno-btn\" size=\"lg\">Almuerzo y cena</Button>\r\n        </div>\r\n           \r\n            <Meals meal={this.state.meal} />\r\n            <Button color=\"secondary\" className=\"logout-btn\" onClick={this.props.logout} size=\"lg\">Cerrar sesión</Button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default breakfastfood;","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Badge, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n//stateless se escribe como función\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      console.log(props)\r\n      this.state={\r\n        modal: false,\r\n        \r\n     }\r\n    }\r\n  \r\n    toggle=()=> {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <section>\r\n            <form center className=\"col-md-8 col-s-4 form-align\"  >\r\n            <FormGroup >\r\n              <Label for=\"exampleEmail\" hidden>Email</Label>\r\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\" onChange={this.props.handleChange}  />\r\n            </FormGroup>\r\n        \r\n            <FormGroup>\r\n              <Label for=\"examplePassword\" hidden>Password</Label>\r\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\" onChange={this.props.handleChange}/>\r\n            </FormGroup>\r\n        \r\n            <Button onClick={this.props.login} size=\"lg\">Iniciar Sesión</Button>\r\n            <div>\r\n              <Badge className=\"badge-link\" href=\"#\" onClick={this.toggle} color=\"white\">Olvidé la contraseña</Badge>\r\n                <Modal isOpen={this.state.modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} toggle={this.toggle} className={this.props.className}>\r\n                <ModalHeader toggle={this.toggle}>Restaurar contraseña</ModalHeader>\r\n                    <ModalBody>\r\n                      <p>Escribe el correo para recibir la restauración de contraseña</p>\r\n                   <Input type=\"email\" name=\"email\" id=\"EmailRest\" placeholder=\"Email\"  />\r\n                    </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"primary\"  onClick={this.props.restaurarPassword} size=\"lg\">Enviar correo</Button>{' '}\r\n                  <Button color=\"secondary\" onClick={this.toggle} size=\"lg\">Cancelar</Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </div>\r\n          </form>\r\n          {/* <img src=\"../../\" width='100' alt=\"hamburger\" /> */}\r\n          </section>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\nimport './App.css';\nimport firebase from 'firebase';\nimport BreakfastFood from './components/DesayunoComida/BreakfastFood';\nimport Login from './components/Login/Login'\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      email: '',\n      password:'',\n      user:null,\n   }\n  }\n\n \n  componentWillMount () {\n    // devuelve un objeto usuario. Cada vez que nos loggeemos o salgamos, el objeto va a tener el usuario o va a salir null\n  firebase.auth().onAuthStateChanged(user =>{\n  // modifica el estado. Si la clave y el valor son el mismo, se peude poner solo una vez. Es lo mismo que user: user\n    this.setState({ user});\n   })\n  }\n\n  handleChange=(e)=>{\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  login = (e) => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n      console.log(`el usuario ${u} ha iniciado sesión`)\n    })\n      .catch((error) => {\n    alert(error);\n  })\n}\n\n    handleLogout = ()=> {\n      firebase.auth().signOut()\n      .then(result => console.log(`${result.user.email} ha salido`))\n      .catch(error => console.log (`Error ${error.code}: ${error.message}`))\n    }\n\n  restaurarPassword = () =>{\n  firebase.auth().sendPasswordResetEmail(this.state.email) \n  .then(()=>alert('se ha enviado el correo'))\n  .catch(function(error) {\n    // Error occurred. Inspect errr.code.\n    console.log(error)\n  });\n  }\n\n    renderLoginButton = () => {\n      //  preguntamos si el usuario está logueado; es distino de null:\n      if (this.state.user){\n        return (\n        <div className=\"container\">\n         <BreakfastFood logout={this.handleLogout}/>\n        </div>\n          )\n        }else{\n          return(\n            <Login  handleChange={this.handleChange} login={this.login} restaurarPassword={this.restaurarPassword} state={this.state.user}/>  \n            )\n           }\n         }\n        \n          render() {\n            return (\n              <div className=\"App\">\n               <header className=\"App-header\">\n                    <p>\n                      Burger Queen\n                     </p>\n                </header>\n                <div className=\"App-intro\">{ this.renderLoginButton() }</div>\n              </div>\n            );\n          }\n         } \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase'\n\nfirebase.initializeApp({apiKey: \"AIzaSyAjovfnX7-siC6oHVe-b1qsCSHEwR_g3Cs\",\nauthDomain: \"burger-queen-35f47.firebaseapp.com\",\ndatabaseURL: \"https://burger-queen-35f47.firebaseio.com\",\nprojectId: \"burger-queen-35f47\",\nstorageBucket: \"burger-queen-35f47.appspot.com\",\nmessagingSenderId: \"611708104239\"\n})\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}